[tool.poetry]
name = "mycoolapp"
version = "0.0.1"
description = ""
authors = ["Kieran Gee <kieran.lost.the.game@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
flask = "*"
waitress = "*"
pyyaml = "*"
requests = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.poetry.group.dev.dependencies]
ruff = "*"
pylance = "*"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
cache-dir = "~/.cache/ruff"
target-version = "py311"
line-length = 120

[tool.ruff.lint]
extend-fixable = ["B", "I001"]
select = ["ALL"] # include all the rules, including new ones
ignore = [
    # Modules
    "DJ",  # Django
    "PTH", # KG builtin-open is fine
    "DTZ", # KG no need to specify timezone

    # Specific rules
    "ANN101", # KG Why define self...
    "TD002",  # KG Verbose TODO, only I work on this project
    "TD003",  # KG Verbose TODO, only I work on this project
]

[tool.ruff.per-file-ignores]
"tests/*.py" = [
    "S101", # KG asserts allowed in tests.
    "ARG",  # KG Unused function args -> fixtures nevertheless are functionally relevant
    "FBT",  # KG Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 40

[tool.pytest]
testpaths = "tests"
