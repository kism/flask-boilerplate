---
name: Test (PyTest)

on:
  push:
    branches:
      - main
      - test
    paths-ignore:
      - '**/README.md'
jobs:
  test_create_my_new_project:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cookiecutter
        run: pip install cookiecutter

      - name: Run image
        uses: abatilo/actions-poetry@v2

      - name: Configure Poetry to install dependencies in virtualenv
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Generate cookiecutter project
        run: cookiecutter flask-boilerplate --no-input
        working-directory: ../

      - name: Install dependencies
        working-directory: ../mycoolapp
        run: poetry install --without dev

      - name: Test templated project with pytest
        working-directory: ../mycoolapp
        run: poetry run pytest --cov-report=xml --cov-report=term

      - name: Move coverage report to correct location
        run: mv ../mycoolapp/coverage.xml .

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
